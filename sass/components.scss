.form {

    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }
    width: 37rem;

    &__input {
        font-size: 2.5rem;
        font-family: inherit;
        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-gray, .8);
        border: none;
        border-bottom: 3px solid transparent;
        width: 100%;
        display: block; 
        transition: all .3s;

        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-secondary; 
        }

        &:focus:invalid {
            border-bottom: 3px solid $color-secondary;
        }

        &::-webkit-input-placeholder {
            color: $color-gray-light;
        }
    
    }

    
    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: all .3s;
    }

    &__input:placeholder-shown + &__label{
        //ðŸ‘‡the opacity is added and used because i want to animate the label during appearance
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }

}

.loader {
    position: absolute;
    background: $color-white;
    top: 50%;
    left: 50%;
    width: 100vw;
    height: 100vh;
    z-index: 50;
    transform: translate(-50%, -50%);
    display: none;
    opacity: 0;
    justify-content: center;
    align-items: center;
    transition: all .6s ease-in-out;

    & > span {
        display: inline-block;
        background-color: $color-secondary;
        width: 0;
        height: 0;
        border-radius: 50%;
        margin: 0 .8rem;
        transform: translate3d(0);
        animation: bounce .6s infinite alternate;
        
    }

    & > span:nth-child(2) {
        background-color: $color-gray-light2;
        animation-delay: .2s;
    }

    & > span:nth-child(3) {
        animation-delay: .4s;
    }
}

@keyframes bounce {
    to {
        width: 1.6rem;
        height: 1.6rem;
        transform: translate3d(0, -1.6rem, 0);
    }
}